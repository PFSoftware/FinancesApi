// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PFSoftware.FinancesApi.Data;

namespace PFSoftware.FinancesApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210526030500_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.FinancialTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Inflow")
                        .HasColumnType("TEXT");

                    b.Property<int>("MajorCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Memo")
                        .HasColumnType("TEXT");

                    b.Property<int>("MinorCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Outflow")
                        .HasColumnType("TEXT");

                    b.Property<int>("PayeeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("MajorCategoryId");

                    b.HasIndex("MinorCategoryId");

                    b.HasIndex("PayeeId");

                    b.ToTable("FinancialTransactions");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.MajorCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MajorCategories");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.MinorCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MajorCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MajorCategoryId");

                    b.ToTable("MinorCategories");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.Payee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Payees");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.FinancialTransaction", b =>
                {
                    b.HasOne("PFSoftware.FinancesApi.Models.Domain.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFSoftware.FinancesApi.Models.Domain.MajorCategory", "MajorCategory")
                        .WithMany()
                        .HasForeignKey("MajorCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFSoftware.FinancesApi.Models.Domain.MinorCategory", "MinorCategory")
                        .WithMany()
                        .HasForeignKey("MinorCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFSoftware.FinancesApi.Models.Domain.Payee", "Payee")
                        .WithMany()
                        .HasForeignKey("PayeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("MajorCategory");

                    b.Navigation("MinorCategory");

                    b.Navigation("Payee");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.MinorCategory", b =>
                {
                    b.HasOne("PFSoftware.FinancesApi.Models.Domain.MajorCategory", "MajorCategory")
                        .WithMany("MinorCategories")
                        .HasForeignKey("MajorCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MajorCategory");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("PFSoftware.FinancesApi.Models.Domain.MajorCategory", b =>
                {
                    b.Navigation("MinorCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
